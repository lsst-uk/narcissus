---
- hosts: monitor
  gather_facts: false
  become: true

  vars:
    domain: "ztf-alert-monitor.lsst.ac.uk"
    email: "g.francis@epcc.ed.ac.uk"

  tasks:

    - name: "Add Grafana repo"
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: "Add Grafana GPG key"
      apt_key:
        id: 4E40DDF6D76E284A4A6780E48C8C34C524098CB6
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: "Install Packages"
      apt:
        pkg:
          - grafana
          - nginx
          - software-properties-common
        state: present
        update-cache: yes

    - name: "Add Certbot PPA"
      apt_repository:
        repo: ppa:certbot/certbot
        state: present

    - name: "Install Certbot"
      apt:
        pkg:
          - certbot
          - python-certbot-nginx
        state: present
        update-cache: yes

    - name: "Get certificate"
      command: "certbot certonly --standalone -m {{ email }} -d {{ domain }} --agree-tos"
      register: certoutput
      args:
        creates: /etc/letsencrypt/live/ztf-alert-monitor.lsst.ac.uk

    - debug: var=certoutput.stdout_lines

    - name: "Enable Grafana service"
      service:
        enabled: true
        name:  grafana-server
        state: started

    - name: "Set admin password"
      script: grafana/set-admin-pw.sh
      args:
        creates: /root/grafana.admin.password.txt
      register: output

    - debug: var=output.stdout_lines

    - name: "Create Nginx config file"
      copy:
        src: grafana/nginx.conf
        dest: /etc/nginx/sites-available/grafana

    - name: "Enable Nginx config"
      file:
        src: /etc/nginx/sites-available/grafana
        dest: /etc/nginx/sites-enabled/grafana
        state: link
    
    - name: "Disable default Nginx config"
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

